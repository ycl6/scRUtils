% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_sc.R
\name{plotProjections}
\alias{plotProjections}
\title{Colour cells by a feature in two 2-dimension representation side-by-side}
\usage{
plotProjections(
  sce,
  feature,
  dimnames = c("TSNE", "UMAP"),
  feat_desc = NULL,
  feat_color = NULL,
  color_breaks = waiver(),
  color_limits = NULL,
  exprs_by = "logcounts",
  text_by = NULL,
  point_size = 1,
  point_alpha = 0.5,
  theme_size = 18,
  show_na = FALSE,
  na.value = "grey50",
  legend_pos = "right",
  legend_just = "center",
  guides_ncol = NULL,
  guides_nrow = NULL,
  guides_barwidth = NULL,
  guides_barheight = NULL,
  guides_size = point_size * 2,
  titles = NULL,
  show_title = TRUE,
  show_subtitle = TRUE,
  other_fields = list(),
  add_void = FALSE,
  rel_widths = c(15, 1),
  rel_heights = c(15, 1),
  ...
)
}
\arguments{
\item{sce}{A \code{SingleCellExperiment} object.}

\item{feature}{A string indicating the column name in \code{colData(sce)}
containing the feature to be coloured. Alternatively, a character vector of
the same length as \code{colData(sce)} indicating the feature type of each cell.}

\item{dimnames}{A character or integer vector of length 2 indicating the
reduced dimension result in \code{reducedDims(sce)} to plot. Default is
\code{c("TSNE", "UMAP")}.}

\item{feat_desc}{A string that describes the coloured feature. Default is
\code{NULL}.}

\item{feat_color}{A character vector of colour codes indicating the colours
of the features, or a palette function that creates a vector of colours
along a colour map. Default is \code{NULL}, and use \code{\link[=choosePalette]{choosePalette()}} to
select a palette.}

\item{color_breaks}{For colouring continuous data, one of:
\itemize{
\item \code{NULL} for no breaks
\item \code{waiver()} for the default breaks (the scale limits)
\item A character vector of breaks
\item A function that takes the limits as input and returns breaks
as output
}}

\item{color_limits}{For colouring continuous data, one of:
\itemize{
\item \code{NULL} to use the default scale range
\item A numeric vector of length two providing limits of the scale. Use \code{NA} to
refer to the existing minimum or maximum
\item A function that accepts the existing (automatic) limits and returns new limits.
}}

\item{exprs_by}{A string or integer scalar specifying which assay from
\code{sce} to obtain expression values from, for use in point aesthetics. Use
\code{assayNames(sce)} to find all availavle assays in \code{sce}. Default is
"logcounts".}

\item{text_by}{A string indicating the column metadata field with which
to add text labels on the plot. Default is \code{NULL}.}

\item{point_size}{A numeric scalar indicating the size of the points.
Default is 1.}

\item{point_alpha}{A numeric scalar (between 0 and 1) indicating the
transparency. Default is 0.5.}

\item{theme_size}{A numeric scalar indicating the base font size.
Default is 18.}

\item{show_na}{Logical scalar indicating whether to show \code{NA} values.
Default is \code{FALSE}.}

\item{na.value}{Colour to use for missing values. Default is \code{"grey50"}.}

\item{legend_pos}{The position of legends ("none", "left", "right",
"bottom","top". Use "none" to disable plot legend. Default is "right".}

\item{legend_just}{The anchor point for positioning legend inside plot
("center" or two-element numeric vector) or the justification according
to the plot area when positioned outside the plot. Default is "center".}

\item{guides_ncol, guides_nrow}{An integer scalar indicating the desired
number of column and row of discrete legends. Default is NULL.}

\item{guides_barwidth, guides_barheight}{A numeric or a \code{grid::unit()}
object specifying the width and height of the colourbar. Default is NULL.}

\item{guides_size}{An integer scalar indicating the desired size of the
points in a discrete legend. Default is \code{point_size * 2}.}

\item{titles}{A character vector of length 2 indicating the plot title.
Default is \code{NULL} and the \code{dimnames} is used as titles.}

\item{show_title}{Logical scalar indicating whether to show plot title.
Default is \code{TRUE}.}

\item{show_subtitle}{Logical scalar indicating whether to show plot
subtitle, Default is \code{TRUE}.}

\item{other_fields}{Additional cell-based fields to include in the
DataFrame. Default is \code{list()}.}

\item{add_void}{Logical scalar indicating whether to add a completely empty
theme using \code{\link[ggplot2:ggtheme]{ggplot2::theme_void()}} in place of the legend. This is
applicable when \code{legend_pos = "none"}. The empty theme is added to the
right of the main plot using \code{plot_grid} Default is \code{FALSE}.}

\item{rel_widths}{A numeric vector of relative columns widths. For example,
in a two-column grid, \code{rel_widths = c(2, 1)} would make the first column
twice as wide as the second column. This is applicable when \code{legend_pos}
is "right" or "left". Default is \code{c(15, 1)} to make the joined plot 15 times
as wide as the legend column if \code{legend_pos = "right"}.}

\item{rel_heights}{A numerical vector of relative rows heights. Works just
as \code{rel_widths} does, but for rows rather than columns. This is applicable
when \code{legend_pos} is "bottom" or "top". Default is \code{c(15, 1)} to make
the joined plot 15 times as tall as the legend row if
\code{legend_pos = "bottom"}.}

\item{...}{Other arguments passed on to \code{\link[=add_label]{add_label()}}.}
}
\value{
A \pkg{ggplot2} plot with an object of class \code{c("gg", "ggplot")}
}
\description{
This function make use of \code{plotProjection()} to show cells on two
pre-calculated low-dimensional projection (such as UMAP and t-SNE) in
a compound figure.
}
\details{
The function uses \code{plotProjection()} to create 2 base plots, then \code{get_Legend()}
to produce a shared legend and \code{plot_grid()} from \pkg{cowplot} to create a compound
figure with legend placed at the desired position as specified by \code{legend_pos}.
}
\examples{
# Load demo dataset
data(sce)

# Plot TSNE and UMAP side-by-side
plotProjections(sce, "label",
  dimname = c("TSNE", "UMAP"), text_by = "label",
  feat_desc = "Cluster"
)

# Show DKD62 expression
plotProjections(sce, "DKD62",
  dimname = c("TSNE", "UMAP"), text_by = "label",
  feat_desc = "DKD62 Expression", guides_barwidth = 15
)
}
\seealso{
\code{\link[=plotProjection]{plotProjection()}}, \code{\link[scater:plotReducedDim]{scater::plotReducedDim()}}
}
\author{
I-Hsuan Lin
}
